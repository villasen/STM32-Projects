
Startup-Project-411.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c9c  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000080  08000e34  08000e34  00010e34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000eb4  08000eb4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000eb4  08000eb4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000eb4  08000eb4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000eb4  08000eb4  00010eb4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000eb8  08000eb8  00010eb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000ebc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08000f20  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08000f20  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000936  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002c5  00000000  00000000  000209c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020c90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00020da8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002be0  00000000  00000000  00020e88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001397  00000000  00000000  00023a68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000930a  00000000  00000000  00024dff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e109  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a18  00000000  00000000  0002e15c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000064 	.word	0x20000064
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000e1c 	.word	0x08000e1c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000068 	.word	0x20000068
 80001d4:	08000e1c 	.word	0x08000e1c

080001d8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0

	printf("Test startup project 411\n");
 80001dc:	4801      	ldr	r0, [pc, #4]	; (80001e4 <main+0xc>)
 80001de:	f000 f993 	bl	8000508 <puts>
	/* Loop forever */
	for(;;);
 80001e2:	e7fe      	b.n	80001e2 <main+0xa>
 80001e4:	08000e34 	.word	0x08000e34

080001e8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80001f2:	4b0e      	ldr	r3, [pc, #56]	; (800022c <ITM_SendChar+0x44>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a0d      	ldr	r2, [pc, #52]	; (800022c <ITM_SendChar+0x44>)
 80001f8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001fc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80001fe:	4b0c      	ldr	r3, [pc, #48]	; (8000230 <ITM_SendChar+0x48>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a0b      	ldr	r2, [pc, #44]	; (8000230 <ITM_SendChar+0x48>)
 8000204:	f043 0301 	orr.w	r3, r3, #1
 8000208:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800020a:	bf00      	nop
 800020c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f003 0301 	and.w	r3, r3, #1
 8000216:	2b00      	cmp	r3, #0
 8000218:	d0f8      	beq.n	800020c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800021a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800021e:	79fb      	ldrb	r3, [r7, #7]
 8000220:	6013      	str	r3, [r2, #0]
}
 8000222:	bf00      	nop
 8000224:	370c      	adds	r7, #12
 8000226:	46bd      	mov	sp, r7
 8000228:	bc80      	pop	{r7}
 800022a:	4770      	bx	lr
 800022c:	e000edfc 	.word	0xe000edfc
 8000230:	e0000e00 	.word	0xe0000e00

08000234 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b086      	sub	sp, #24
 8000238:	af00      	add	r7, sp, #0
 800023a:	60f8      	str	r0, [r7, #12]
 800023c:	60b9      	str	r1, [r7, #8]
 800023e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000240:	2300      	movs	r3, #0
 8000242:	617b      	str	r3, [r7, #20]
 8000244:	e00a      	b.n	800025c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000246:	f3af 8000 	nop.w
 800024a:	4601      	mov	r1, r0
 800024c:	68bb      	ldr	r3, [r7, #8]
 800024e:	1c5a      	adds	r2, r3, #1
 8000250:	60ba      	str	r2, [r7, #8]
 8000252:	b2ca      	uxtb	r2, r1
 8000254:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000256:	697b      	ldr	r3, [r7, #20]
 8000258:	3301      	adds	r3, #1
 800025a:	617b      	str	r3, [r7, #20]
 800025c:	697a      	ldr	r2, [r7, #20]
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	429a      	cmp	r2, r3
 8000262:	dbf0      	blt.n	8000246 <_read+0x12>
	}

return len;
 8000264:	687b      	ldr	r3, [r7, #4]
}
 8000266:	4618      	mov	r0, r3
 8000268:	3718      	adds	r7, #24
 800026a:	46bd      	mov	sp, r7
 800026c:	bd80      	pop	{r7, pc}

0800026e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800026e:	b580      	push	{r7, lr}
 8000270:	b086      	sub	sp, #24
 8000272:	af00      	add	r7, sp, #0
 8000274:	60f8      	str	r0, [r7, #12]
 8000276:	60b9      	str	r1, [r7, #8]
 8000278:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800027a:	2300      	movs	r3, #0
 800027c:	617b      	str	r3, [r7, #20]
 800027e:	e009      	b.n	8000294 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000280:	68bb      	ldr	r3, [r7, #8]
 8000282:	1c5a      	adds	r2, r3, #1
 8000284:	60ba      	str	r2, [r7, #8]
 8000286:	781b      	ldrb	r3, [r3, #0]
 8000288:	4618      	mov	r0, r3
 800028a:	f7ff ffad 	bl	80001e8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800028e:	697b      	ldr	r3, [r7, #20]
 8000290:	3301      	adds	r3, #1
 8000292:	617b      	str	r3, [r7, #20]
 8000294:	697a      	ldr	r2, [r7, #20]
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	429a      	cmp	r2, r3
 800029a:	dbf1      	blt.n	8000280 <_write+0x12>
	}
	return len;
 800029c:	687b      	ldr	r3, [r7, #4]
}
 800029e:	4618      	mov	r0, r3
 80002a0:	3718      	adds	r7, #24
 80002a2:	46bd      	mov	sp, r7
 80002a4:	bd80      	pop	{r7, pc}

080002a6 <_close>:

int _close(int file)
{
 80002a6:	b480      	push	{r7}
 80002a8:	b083      	sub	sp, #12
 80002aa:	af00      	add	r7, sp, #0
 80002ac:	6078      	str	r0, [r7, #4]
	return -1;
 80002ae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	370c      	adds	r7, #12
 80002b6:	46bd      	mov	sp, r7
 80002b8:	bc80      	pop	{r7}
 80002ba:	4770      	bx	lr

080002bc <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002bc:	b480      	push	{r7}
 80002be:	b083      	sub	sp, #12
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	6078      	str	r0, [r7, #4]
 80002c4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002c6:	683b      	ldr	r3, [r7, #0]
 80002c8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002cc:	605a      	str	r2, [r3, #4]
	return 0;
 80002ce:	2300      	movs	r3, #0
}
 80002d0:	4618      	mov	r0, r3
 80002d2:	370c      	adds	r7, #12
 80002d4:	46bd      	mov	sp, r7
 80002d6:	bc80      	pop	{r7}
 80002d8:	4770      	bx	lr

080002da <_isatty>:

int _isatty(int file)
{
 80002da:	b480      	push	{r7}
 80002dc:	b083      	sub	sp, #12
 80002de:	af00      	add	r7, sp, #0
 80002e0:	6078      	str	r0, [r7, #4]
	return 1;
 80002e2:	2301      	movs	r3, #1
}
 80002e4:	4618      	mov	r0, r3
 80002e6:	370c      	adds	r7, #12
 80002e8:	46bd      	mov	sp, r7
 80002ea:	bc80      	pop	{r7}
 80002ec:	4770      	bx	lr

080002ee <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002ee:	b480      	push	{r7}
 80002f0:	b085      	sub	sp, #20
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	60f8      	str	r0, [r7, #12]
 80002f6:	60b9      	str	r1, [r7, #8]
 80002f8:	607a      	str	r2, [r7, #4]
	return 0;
 80002fa:	2300      	movs	r3, #0
}
 80002fc:	4618      	mov	r0, r3
 80002fe:	3714      	adds	r7, #20
 8000300:	46bd      	mov	sp, r7
 8000302:	bc80      	pop	{r7}
 8000304:	4770      	bx	lr
	...

08000308 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	b086      	sub	sp, #24
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000310:	4a14      	ldr	r2, [pc, #80]	; (8000364 <_sbrk+0x5c>)
 8000312:	4b15      	ldr	r3, [pc, #84]	; (8000368 <_sbrk+0x60>)
 8000314:	1ad3      	subs	r3, r2, r3
 8000316:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000318:	697b      	ldr	r3, [r7, #20]
 800031a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800031c:	4b13      	ldr	r3, [pc, #76]	; (800036c <_sbrk+0x64>)
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	2b00      	cmp	r3, #0
 8000322:	d102      	bne.n	800032a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000324:	4b11      	ldr	r3, [pc, #68]	; (800036c <_sbrk+0x64>)
 8000326:	4a12      	ldr	r2, [pc, #72]	; (8000370 <_sbrk+0x68>)
 8000328:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800032a:	4b10      	ldr	r3, [pc, #64]	; (800036c <_sbrk+0x64>)
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4413      	add	r3, r2
 8000332:	693a      	ldr	r2, [r7, #16]
 8000334:	429a      	cmp	r2, r3
 8000336:	d207      	bcs.n	8000348 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000338:	f000 f846 	bl	80003c8 <__errno>
 800033c:	4603      	mov	r3, r0
 800033e:	220c      	movs	r2, #12
 8000340:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000342:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000346:	e009      	b.n	800035c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000348:	4b08      	ldr	r3, [pc, #32]	; (800036c <_sbrk+0x64>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800034e:	4b07      	ldr	r3, [pc, #28]	; (800036c <_sbrk+0x64>)
 8000350:	681a      	ldr	r2, [r3, #0]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4413      	add	r3, r2
 8000356:	4a05      	ldr	r2, [pc, #20]	; (800036c <_sbrk+0x64>)
 8000358:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800035a:	68fb      	ldr	r3, [r7, #12]
}
 800035c:	4618      	mov	r0, r3
 800035e:	3718      	adds	r7, #24
 8000360:	46bd      	mov	sp, r7
 8000362:	bd80      	pop	{r7, pc}
 8000364:	20020000 	.word	0x20020000
 8000368:	00000400 	.word	0x00000400
 800036c:	20000080 	.word	0x20000080
 8000370:	20000098 	.word	0x20000098

08000374 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000374:	480d      	ldr	r0, [pc, #52]	; (80003ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000376:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000378:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800037c:	480c      	ldr	r0, [pc, #48]	; (80003b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800037e:	490d      	ldr	r1, [pc, #52]	; (80003b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000380:	4a0d      	ldr	r2, [pc, #52]	; (80003b8 <LoopForever+0xe>)
  movs r3, #0
 8000382:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000384:	e002      	b.n	800038c <LoopCopyDataInit>

08000386 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000386:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000388:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800038a:	3304      	adds	r3, #4

0800038c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800038c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800038e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000390:	d3f9      	bcc.n	8000386 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000392:	4a0a      	ldr	r2, [pc, #40]	; (80003bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000394:	4c0a      	ldr	r4, [pc, #40]	; (80003c0 <LoopForever+0x16>)
  movs r3, #0
 8000396:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000398:	e001      	b.n	800039e <LoopFillZerobss>

0800039a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800039a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800039c:	3204      	adds	r2, #4

0800039e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800039e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003a0:	d3fb      	bcc.n	800039a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003a2:	f000 f817 	bl	80003d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003a6:	f7ff ff17 	bl	80001d8 <main>

080003aa <LoopForever>:

LoopForever:
    b LoopForever
 80003aa:	e7fe      	b.n	80003aa <LoopForever>
  ldr   r0, =_estack
 80003ac:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003b4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003b8:	08000ebc 	.word	0x08000ebc
  ldr r2, =_sbss
 80003bc:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003c0:	20000094 	.word	0x20000094

080003c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003c4:	e7fe      	b.n	80003c4 <ADC_IRQHandler>
	...

080003c8 <__errno>:
 80003c8:	4b01      	ldr	r3, [pc, #4]	; (80003d0 <__errno+0x8>)
 80003ca:	6818      	ldr	r0, [r3, #0]
 80003cc:	4770      	bx	lr
 80003ce:	bf00      	nop
 80003d0:	20000000 	.word	0x20000000

080003d4 <__libc_init_array>:
 80003d4:	b570      	push	{r4, r5, r6, lr}
 80003d6:	4d0d      	ldr	r5, [pc, #52]	; (800040c <__libc_init_array+0x38>)
 80003d8:	4c0d      	ldr	r4, [pc, #52]	; (8000410 <__libc_init_array+0x3c>)
 80003da:	1b64      	subs	r4, r4, r5
 80003dc:	10a4      	asrs	r4, r4, #2
 80003de:	2600      	movs	r6, #0
 80003e0:	42a6      	cmp	r6, r4
 80003e2:	d109      	bne.n	80003f8 <__libc_init_array+0x24>
 80003e4:	4d0b      	ldr	r5, [pc, #44]	; (8000414 <__libc_init_array+0x40>)
 80003e6:	4c0c      	ldr	r4, [pc, #48]	; (8000418 <__libc_init_array+0x44>)
 80003e8:	f000 fd18 	bl	8000e1c <_init>
 80003ec:	1b64      	subs	r4, r4, r5
 80003ee:	10a4      	asrs	r4, r4, #2
 80003f0:	2600      	movs	r6, #0
 80003f2:	42a6      	cmp	r6, r4
 80003f4:	d105      	bne.n	8000402 <__libc_init_array+0x2e>
 80003f6:	bd70      	pop	{r4, r5, r6, pc}
 80003f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003fc:	4798      	blx	r3
 80003fe:	3601      	adds	r6, #1
 8000400:	e7ee      	b.n	80003e0 <__libc_init_array+0xc>
 8000402:	f855 3b04 	ldr.w	r3, [r5], #4
 8000406:	4798      	blx	r3
 8000408:	3601      	adds	r6, #1
 800040a:	e7f2      	b.n	80003f2 <__libc_init_array+0x1e>
 800040c:	08000eb4 	.word	0x08000eb4
 8000410:	08000eb4 	.word	0x08000eb4
 8000414:	08000eb4 	.word	0x08000eb4
 8000418:	08000eb8 	.word	0x08000eb8

0800041c <memset>:
 800041c:	4402      	add	r2, r0
 800041e:	4603      	mov	r3, r0
 8000420:	4293      	cmp	r3, r2
 8000422:	d100      	bne.n	8000426 <memset+0xa>
 8000424:	4770      	bx	lr
 8000426:	f803 1b01 	strb.w	r1, [r3], #1
 800042a:	e7f9      	b.n	8000420 <memset+0x4>

0800042c <_puts_r>:
 800042c:	b570      	push	{r4, r5, r6, lr}
 800042e:	460e      	mov	r6, r1
 8000430:	4605      	mov	r5, r0
 8000432:	b118      	cbz	r0, 800043c <_puts_r+0x10>
 8000434:	6983      	ldr	r3, [r0, #24]
 8000436:	b90b      	cbnz	r3, 800043c <_puts_r+0x10>
 8000438:	f000 fa44 	bl	80008c4 <__sinit>
 800043c:	69ab      	ldr	r3, [r5, #24]
 800043e:	68ac      	ldr	r4, [r5, #8]
 8000440:	b913      	cbnz	r3, 8000448 <_puts_r+0x1c>
 8000442:	4628      	mov	r0, r5
 8000444:	f000 fa3e 	bl	80008c4 <__sinit>
 8000448:	4b2c      	ldr	r3, [pc, #176]	; (80004fc <_puts_r+0xd0>)
 800044a:	429c      	cmp	r4, r3
 800044c:	d120      	bne.n	8000490 <_puts_r+0x64>
 800044e:	686c      	ldr	r4, [r5, #4]
 8000450:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000452:	07db      	lsls	r3, r3, #31
 8000454:	d405      	bmi.n	8000462 <_puts_r+0x36>
 8000456:	89a3      	ldrh	r3, [r4, #12]
 8000458:	0598      	lsls	r0, r3, #22
 800045a:	d402      	bmi.n	8000462 <_puts_r+0x36>
 800045c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800045e:	f000 facf 	bl	8000a00 <__retarget_lock_acquire_recursive>
 8000462:	89a3      	ldrh	r3, [r4, #12]
 8000464:	0719      	lsls	r1, r3, #28
 8000466:	d51d      	bpl.n	80004a4 <_puts_r+0x78>
 8000468:	6923      	ldr	r3, [r4, #16]
 800046a:	b1db      	cbz	r3, 80004a4 <_puts_r+0x78>
 800046c:	3e01      	subs	r6, #1
 800046e:	68a3      	ldr	r3, [r4, #8]
 8000470:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000474:	3b01      	subs	r3, #1
 8000476:	60a3      	str	r3, [r4, #8]
 8000478:	bb39      	cbnz	r1, 80004ca <_puts_r+0x9e>
 800047a:	2b00      	cmp	r3, #0
 800047c:	da38      	bge.n	80004f0 <_puts_r+0xc4>
 800047e:	4622      	mov	r2, r4
 8000480:	210a      	movs	r1, #10
 8000482:	4628      	mov	r0, r5
 8000484:	f000 f848 	bl	8000518 <__swbuf_r>
 8000488:	3001      	adds	r0, #1
 800048a:	d011      	beq.n	80004b0 <_puts_r+0x84>
 800048c:	250a      	movs	r5, #10
 800048e:	e011      	b.n	80004b4 <_puts_r+0x88>
 8000490:	4b1b      	ldr	r3, [pc, #108]	; (8000500 <_puts_r+0xd4>)
 8000492:	429c      	cmp	r4, r3
 8000494:	d101      	bne.n	800049a <_puts_r+0x6e>
 8000496:	68ac      	ldr	r4, [r5, #8]
 8000498:	e7da      	b.n	8000450 <_puts_r+0x24>
 800049a:	4b1a      	ldr	r3, [pc, #104]	; (8000504 <_puts_r+0xd8>)
 800049c:	429c      	cmp	r4, r3
 800049e:	bf08      	it	eq
 80004a0:	68ec      	ldreq	r4, [r5, #12]
 80004a2:	e7d5      	b.n	8000450 <_puts_r+0x24>
 80004a4:	4621      	mov	r1, r4
 80004a6:	4628      	mov	r0, r5
 80004a8:	f000 f888 	bl	80005bc <__swsetup_r>
 80004ac:	2800      	cmp	r0, #0
 80004ae:	d0dd      	beq.n	800046c <_puts_r+0x40>
 80004b0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80004b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004b6:	07da      	lsls	r2, r3, #31
 80004b8:	d405      	bmi.n	80004c6 <_puts_r+0x9a>
 80004ba:	89a3      	ldrh	r3, [r4, #12]
 80004bc:	059b      	lsls	r3, r3, #22
 80004be:	d402      	bmi.n	80004c6 <_puts_r+0x9a>
 80004c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004c2:	f000 fa9e 	bl	8000a02 <__retarget_lock_release_recursive>
 80004c6:	4628      	mov	r0, r5
 80004c8:	bd70      	pop	{r4, r5, r6, pc}
 80004ca:	2b00      	cmp	r3, #0
 80004cc:	da04      	bge.n	80004d8 <_puts_r+0xac>
 80004ce:	69a2      	ldr	r2, [r4, #24]
 80004d0:	429a      	cmp	r2, r3
 80004d2:	dc06      	bgt.n	80004e2 <_puts_r+0xb6>
 80004d4:	290a      	cmp	r1, #10
 80004d6:	d004      	beq.n	80004e2 <_puts_r+0xb6>
 80004d8:	6823      	ldr	r3, [r4, #0]
 80004da:	1c5a      	adds	r2, r3, #1
 80004dc:	6022      	str	r2, [r4, #0]
 80004de:	7019      	strb	r1, [r3, #0]
 80004e0:	e7c5      	b.n	800046e <_puts_r+0x42>
 80004e2:	4622      	mov	r2, r4
 80004e4:	4628      	mov	r0, r5
 80004e6:	f000 f817 	bl	8000518 <__swbuf_r>
 80004ea:	3001      	adds	r0, #1
 80004ec:	d1bf      	bne.n	800046e <_puts_r+0x42>
 80004ee:	e7df      	b.n	80004b0 <_puts_r+0x84>
 80004f0:	6823      	ldr	r3, [r4, #0]
 80004f2:	250a      	movs	r5, #10
 80004f4:	1c5a      	adds	r2, r3, #1
 80004f6:	6022      	str	r2, [r4, #0]
 80004f8:	701d      	strb	r5, [r3, #0]
 80004fa:	e7db      	b.n	80004b4 <_puts_r+0x88>
 80004fc:	08000e74 	.word	0x08000e74
 8000500:	08000e94 	.word	0x08000e94
 8000504:	08000e54 	.word	0x08000e54

08000508 <puts>:
 8000508:	4b02      	ldr	r3, [pc, #8]	; (8000514 <puts+0xc>)
 800050a:	4601      	mov	r1, r0
 800050c:	6818      	ldr	r0, [r3, #0]
 800050e:	f7ff bf8d 	b.w	800042c <_puts_r>
 8000512:	bf00      	nop
 8000514:	20000000 	.word	0x20000000

08000518 <__swbuf_r>:
 8000518:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800051a:	460e      	mov	r6, r1
 800051c:	4614      	mov	r4, r2
 800051e:	4605      	mov	r5, r0
 8000520:	b118      	cbz	r0, 800052a <__swbuf_r+0x12>
 8000522:	6983      	ldr	r3, [r0, #24]
 8000524:	b90b      	cbnz	r3, 800052a <__swbuf_r+0x12>
 8000526:	f000 f9cd 	bl	80008c4 <__sinit>
 800052a:	4b21      	ldr	r3, [pc, #132]	; (80005b0 <__swbuf_r+0x98>)
 800052c:	429c      	cmp	r4, r3
 800052e:	d12b      	bne.n	8000588 <__swbuf_r+0x70>
 8000530:	686c      	ldr	r4, [r5, #4]
 8000532:	69a3      	ldr	r3, [r4, #24]
 8000534:	60a3      	str	r3, [r4, #8]
 8000536:	89a3      	ldrh	r3, [r4, #12]
 8000538:	071a      	lsls	r2, r3, #28
 800053a:	d52f      	bpl.n	800059c <__swbuf_r+0x84>
 800053c:	6923      	ldr	r3, [r4, #16]
 800053e:	b36b      	cbz	r3, 800059c <__swbuf_r+0x84>
 8000540:	6923      	ldr	r3, [r4, #16]
 8000542:	6820      	ldr	r0, [r4, #0]
 8000544:	1ac0      	subs	r0, r0, r3
 8000546:	6963      	ldr	r3, [r4, #20]
 8000548:	b2f6      	uxtb	r6, r6
 800054a:	4283      	cmp	r3, r0
 800054c:	4637      	mov	r7, r6
 800054e:	dc04      	bgt.n	800055a <__swbuf_r+0x42>
 8000550:	4621      	mov	r1, r4
 8000552:	4628      	mov	r0, r5
 8000554:	f000 f922 	bl	800079c <_fflush_r>
 8000558:	bb30      	cbnz	r0, 80005a8 <__swbuf_r+0x90>
 800055a:	68a3      	ldr	r3, [r4, #8]
 800055c:	3b01      	subs	r3, #1
 800055e:	60a3      	str	r3, [r4, #8]
 8000560:	6823      	ldr	r3, [r4, #0]
 8000562:	1c5a      	adds	r2, r3, #1
 8000564:	6022      	str	r2, [r4, #0]
 8000566:	701e      	strb	r6, [r3, #0]
 8000568:	6963      	ldr	r3, [r4, #20]
 800056a:	3001      	adds	r0, #1
 800056c:	4283      	cmp	r3, r0
 800056e:	d004      	beq.n	800057a <__swbuf_r+0x62>
 8000570:	89a3      	ldrh	r3, [r4, #12]
 8000572:	07db      	lsls	r3, r3, #31
 8000574:	d506      	bpl.n	8000584 <__swbuf_r+0x6c>
 8000576:	2e0a      	cmp	r6, #10
 8000578:	d104      	bne.n	8000584 <__swbuf_r+0x6c>
 800057a:	4621      	mov	r1, r4
 800057c:	4628      	mov	r0, r5
 800057e:	f000 f90d 	bl	800079c <_fflush_r>
 8000582:	b988      	cbnz	r0, 80005a8 <__swbuf_r+0x90>
 8000584:	4638      	mov	r0, r7
 8000586:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000588:	4b0a      	ldr	r3, [pc, #40]	; (80005b4 <__swbuf_r+0x9c>)
 800058a:	429c      	cmp	r4, r3
 800058c:	d101      	bne.n	8000592 <__swbuf_r+0x7a>
 800058e:	68ac      	ldr	r4, [r5, #8]
 8000590:	e7cf      	b.n	8000532 <__swbuf_r+0x1a>
 8000592:	4b09      	ldr	r3, [pc, #36]	; (80005b8 <__swbuf_r+0xa0>)
 8000594:	429c      	cmp	r4, r3
 8000596:	bf08      	it	eq
 8000598:	68ec      	ldreq	r4, [r5, #12]
 800059a:	e7ca      	b.n	8000532 <__swbuf_r+0x1a>
 800059c:	4621      	mov	r1, r4
 800059e:	4628      	mov	r0, r5
 80005a0:	f000 f80c 	bl	80005bc <__swsetup_r>
 80005a4:	2800      	cmp	r0, #0
 80005a6:	d0cb      	beq.n	8000540 <__swbuf_r+0x28>
 80005a8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80005ac:	e7ea      	b.n	8000584 <__swbuf_r+0x6c>
 80005ae:	bf00      	nop
 80005b0:	08000e74 	.word	0x08000e74
 80005b4:	08000e94 	.word	0x08000e94
 80005b8:	08000e54 	.word	0x08000e54

080005bc <__swsetup_r>:
 80005bc:	4b32      	ldr	r3, [pc, #200]	; (8000688 <__swsetup_r+0xcc>)
 80005be:	b570      	push	{r4, r5, r6, lr}
 80005c0:	681d      	ldr	r5, [r3, #0]
 80005c2:	4606      	mov	r6, r0
 80005c4:	460c      	mov	r4, r1
 80005c6:	b125      	cbz	r5, 80005d2 <__swsetup_r+0x16>
 80005c8:	69ab      	ldr	r3, [r5, #24]
 80005ca:	b913      	cbnz	r3, 80005d2 <__swsetup_r+0x16>
 80005cc:	4628      	mov	r0, r5
 80005ce:	f000 f979 	bl	80008c4 <__sinit>
 80005d2:	4b2e      	ldr	r3, [pc, #184]	; (800068c <__swsetup_r+0xd0>)
 80005d4:	429c      	cmp	r4, r3
 80005d6:	d10f      	bne.n	80005f8 <__swsetup_r+0x3c>
 80005d8:	686c      	ldr	r4, [r5, #4]
 80005da:	89a3      	ldrh	r3, [r4, #12]
 80005dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005e0:	0719      	lsls	r1, r3, #28
 80005e2:	d42c      	bmi.n	800063e <__swsetup_r+0x82>
 80005e4:	06dd      	lsls	r5, r3, #27
 80005e6:	d411      	bmi.n	800060c <__swsetup_r+0x50>
 80005e8:	2309      	movs	r3, #9
 80005ea:	6033      	str	r3, [r6, #0]
 80005ec:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80005f0:	81a3      	strh	r3, [r4, #12]
 80005f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80005f6:	e03e      	b.n	8000676 <__swsetup_r+0xba>
 80005f8:	4b25      	ldr	r3, [pc, #148]	; (8000690 <__swsetup_r+0xd4>)
 80005fa:	429c      	cmp	r4, r3
 80005fc:	d101      	bne.n	8000602 <__swsetup_r+0x46>
 80005fe:	68ac      	ldr	r4, [r5, #8]
 8000600:	e7eb      	b.n	80005da <__swsetup_r+0x1e>
 8000602:	4b24      	ldr	r3, [pc, #144]	; (8000694 <__swsetup_r+0xd8>)
 8000604:	429c      	cmp	r4, r3
 8000606:	bf08      	it	eq
 8000608:	68ec      	ldreq	r4, [r5, #12]
 800060a:	e7e6      	b.n	80005da <__swsetup_r+0x1e>
 800060c:	0758      	lsls	r0, r3, #29
 800060e:	d512      	bpl.n	8000636 <__swsetup_r+0x7a>
 8000610:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000612:	b141      	cbz	r1, 8000626 <__swsetup_r+0x6a>
 8000614:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000618:	4299      	cmp	r1, r3
 800061a:	d002      	beq.n	8000622 <__swsetup_r+0x66>
 800061c:	4630      	mov	r0, r6
 800061e:	f000 fa57 	bl	8000ad0 <_free_r>
 8000622:	2300      	movs	r3, #0
 8000624:	6363      	str	r3, [r4, #52]	; 0x34
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800062c:	81a3      	strh	r3, [r4, #12]
 800062e:	2300      	movs	r3, #0
 8000630:	6063      	str	r3, [r4, #4]
 8000632:	6923      	ldr	r3, [r4, #16]
 8000634:	6023      	str	r3, [r4, #0]
 8000636:	89a3      	ldrh	r3, [r4, #12]
 8000638:	f043 0308 	orr.w	r3, r3, #8
 800063c:	81a3      	strh	r3, [r4, #12]
 800063e:	6923      	ldr	r3, [r4, #16]
 8000640:	b94b      	cbnz	r3, 8000656 <__swsetup_r+0x9a>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000648:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800064c:	d003      	beq.n	8000656 <__swsetup_r+0x9a>
 800064e:	4621      	mov	r1, r4
 8000650:	4630      	mov	r0, r6
 8000652:	f000 f9fd 	bl	8000a50 <__smakebuf_r>
 8000656:	89a0      	ldrh	r0, [r4, #12]
 8000658:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800065c:	f010 0301 	ands.w	r3, r0, #1
 8000660:	d00a      	beq.n	8000678 <__swsetup_r+0xbc>
 8000662:	2300      	movs	r3, #0
 8000664:	60a3      	str	r3, [r4, #8]
 8000666:	6963      	ldr	r3, [r4, #20]
 8000668:	425b      	negs	r3, r3
 800066a:	61a3      	str	r3, [r4, #24]
 800066c:	6923      	ldr	r3, [r4, #16]
 800066e:	b943      	cbnz	r3, 8000682 <__swsetup_r+0xc6>
 8000670:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000674:	d1ba      	bne.n	80005ec <__swsetup_r+0x30>
 8000676:	bd70      	pop	{r4, r5, r6, pc}
 8000678:	0781      	lsls	r1, r0, #30
 800067a:	bf58      	it	pl
 800067c:	6963      	ldrpl	r3, [r4, #20]
 800067e:	60a3      	str	r3, [r4, #8]
 8000680:	e7f4      	b.n	800066c <__swsetup_r+0xb0>
 8000682:	2000      	movs	r0, #0
 8000684:	e7f7      	b.n	8000676 <__swsetup_r+0xba>
 8000686:	bf00      	nop
 8000688:	20000000 	.word	0x20000000
 800068c:	08000e74 	.word	0x08000e74
 8000690:	08000e94 	.word	0x08000e94
 8000694:	08000e54 	.word	0x08000e54

08000698 <__sflush_r>:
 8000698:	898a      	ldrh	r2, [r1, #12]
 800069a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800069c:	4605      	mov	r5, r0
 800069e:	0710      	lsls	r0, r2, #28
 80006a0:	460c      	mov	r4, r1
 80006a2:	d457      	bmi.n	8000754 <__sflush_r+0xbc>
 80006a4:	684b      	ldr	r3, [r1, #4]
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	dc04      	bgt.n	80006b4 <__sflush_r+0x1c>
 80006aa:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	dc01      	bgt.n	80006b4 <__sflush_r+0x1c>
 80006b0:	2000      	movs	r0, #0
 80006b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006b6:	2e00      	cmp	r6, #0
 80006b8:	d0fa      	beq.n	80006b0 <__sflush_r+0x18>
 80006ba:	2300      	movs	r3, #0
 80006bc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006c0:	682f      	ldr	r7, [r5, #0]
 80006c2:	602b      	str	r3, [r5, #0]
 80006c4:	d032      	beq.n	800072c <__sflush_r+0x94>
 80006c6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006c8:	89a3      	ldrh	r3, [r4, #12]
 80006ca:	075a      	lsls	r2, r3, #29
 80006cc:	d505      	bpl.n	80006da <__sflush_r+0x42>
 80006ce:	6863      	ldr	r3, [r4, #4]
 80006d0:	1ac0      	subs	r0, r0, r3
 80006d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006d4:	b10b      	cbz	r3, 80006da <__sflush_r+0x42>
 80006d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006d8:	1ac0      	subs	r0, r0, r3
 80006da:	2300      	movs	r3, #0
 80006dc:	4602      	mov	r2, r0
 80006de:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006e0:	6a21      	ldr	r1, [r4, #32]
 80006e2:	4628      	mov	r0, r5
 80006e4:	47b0      	blx	r6
 80006e6:	1c43      	adds	r3, r0, #1
 80006e8:	89a3      	ldrh	r3, [r4, #12]
 80006ea:	d106      	bne.n	80006fa <__sflush_r+0x62>
 80006ec:	6829      	ldr	r1, [r5, #0]
 80006ee:	291d      	cmp	r1, #29
 80006f0:	d82c      	bhi.n	800074c <__sflush_r+0xb4>
 80006f2:	4a29      	ldr	r2, [pc, #164]	; (8000798 <__sflush_r+0x100>)
 80006f4:	40ca      	lsrs	r2, r1
 80006f6:	07d6      	lsls	r6, r2, #31
 80006f8:	d528      	bpl.n	800074c <__sflush_r+0xb4>
 80006fa:	2200      	movs	r2, #0
 80006fc:	6062      	str	r2, [r4, #4]
 80006fe:	04d9      	lsls	r1, r3, #19
 8000700:	6922      	ldr	r2, [r4, #16]
 8000702:	6022      	str	r2, [r4, #0]
 8000704:	d504      	bpl.n	8000710 <__sflush_r+0x78>
 8000706:	1c42      	adds	r2, r0, #1
 8000708:	d101      	bne.n	800070e <__sflush_r+0x76>
 800070a:	682b      	ldr	r3, [r5, #0]
 800070c:	b903      	cbnz	r3, 8000710 <__sflush_r+0x78>
 800070e:	6560      	str	r0, [r4, #84]	; 0x54
 8000710:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000712:	602f      	str	r7, [r5, #0]
 8000714:	2900      	cmp	r1, #0
 8000716:	d0cb      	beq.n	80006b0 <__sflush_r+0x18>
 8000718:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800071c:	4299      	cmp	r1, r3
 800071e:	d002      	beq.n	8000726 <__sflush_r+0x8e>
 8000720:	4628      	mov	r0, r5
 8000722:	f000 f9d5 	bl	8000ad0 <_free_r>
 8000726:	2000      	movs	r0, #0
 8000728:	6360      	str	r0, [r4, #52]	; 0x34
 800072a:	e7c2      	b.n	80006b2 <__sflush_r+0x1a>
 800072c:	6a21      	ldr	r1, [r4, #32]
 800072e:	2301      	movs	r3, #1
 8000730:	4628      	mov	r0, r5
 8000732:	47b0      	blx	r6
 8000734:	1c41      	adds	r1, r0, #1
 8000736:	d1c7      	bne.n	80006c8 <__sflush_r+0x30>
 8000738:	682b      	ldr	r3, [r5, #0]
 800073a:	2b00      	cmp	r3, #0
 800073c:	d0c4      	beq.n	80006c8 <__sflush_r+0x30>
 800073e:	2b1d      	cmp	r3, #29
 8000740:	d001      	beq.n	8000746 <__sflush_r+0xae>
 8000742:	2b16      	cmp	r3, #22
 8000744:	d101      	bne.n	800074a <__sflush_r+0xb2>
 8000746:	602f      	str	r7, [r5, #0]
 8000748:	e7b2      	b.n	80006b0 <__sflush_r+0x18>
 800074a:	89a3      	ldrh	r3, [r4, #12]
 800074c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000750:	81a3      	strh	r3, [r4, #12]
 8000752:	e7ae      	b.n	80006b2 <__sflush_r+0x1a>
 8000754:	690f      	ldr	r7, [r1, #16]
 8000756:	2f00      	cmp	r7, #0
 8000758:	d0aa      	beq.n	80006b0 <__sflush_r+0x18>
 800075a:	0793      	lsls	r3, r2, #30
 800075c:	680e      	ldr	r6, [r1, #0]
 800075e:	bf08      	it	eq
 8000760:	694b      	ldreq	r3, [r1, #20]
 8000762:	600f      	str	r7, [r1, #0]
 8000764:	bf18      	it	ne
 8000766:	2300      	movne	r3, #0
 8000768:	1bf6      	subs	r6, r6, r7
 800076a:	608b      	str	r3, [r1, #8]
 800076c:	2e00      	cmp	r6, #0
 800076e:	dd9f      	ble.n	80006b0 <__sflush_r+0x18>
 8000770:	6a21      	ldr	r1, [r4, #32]
 8000772:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000776:	4633      	mov	r3, r6
 8000778:	463a      	mov	r2, r7
 800077a:	4628      	mov	r0, r5
 800077c:	47e0      	blx	ip
 800077e:	2800      	cmp	r0, #0
 8000780:	dc06      	bgt.n	8000790 <__sflush_r+0xf8>
 8000782:	89a3      	ldrh	r3, [r4, #12]
 8000784:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000788:	81a3      	strh	r3, [r4, #12]
 800078a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800078e:	e790      	b.n	80006b2 <__sflush_r+0x1a>
 8000790:	4407      	add	r7, r0
 8000792:	1a36      	subs	r6, r6, r0
 8000794:	e7ea      	b.n	800076c <__sflush_r+0xd4>
 8000796:	bf00      	nop
 8000798:	20400001 	.word	0x20400001

0800079c <_fflush_r>:
 800079c:	b538      	push	{r3, r4, r5, lr}
 800079e:	690b      	ldr	r3, [r1, #16]
 80007a0:	4605      	mov	r5, r0
 80007a2:	460c      	mov	r4, r1
 80007a4:	b913      	cbnz	r3, 80007ac <_fflush_r+0x10>
 80007a6:	2500      	movs	r5, #0
 80007a8:	4628      	mov	r0, r5
 80007aa:	bd38      	pop	{r3, r4, r5, pc}
 80007ac:	b118      	cbz	r0, 80007b6 <_fflush_r+0x1a>
 80007ae:	6983      	ldr	r3, [r0, #24]
 80007b0:	b90b      	cbnz	r3, 80007b6 <_fflush_r+0x1a>
 80007b2:	f000 f887 	bl	80008c4 <__sinit>
 80007b6:	4b14      	ldr	r3, [pc, #80]	; (8000808 <_fflush_r+0x6c>)
 80007b8:	429c      	cmp	r4, r3
 80007ba:	d11b      	bne.n	80007f4 <_fflush_r+0x58>
 80007bc:	686c      	ldr	r4, [r5, #4]
 80007be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007c2:	2b00      	cmp	r3, #0
 80007c4:	d0ef      	beq.n	80007a6 <_fflush_r+0xa>
 80007c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80007c8:	07d0      	lsls	r0, r2, #31
 80007ca:	d404      	bmi.n	80007d6 <_fflush_r+0x3a>
 80007cc:	0599      	lsls	r1, r3, #22
 80007ce:	d402      	bmi.n	80007d6 <_fflush_r+0x3a>
 80007d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007d2:	f000 f915 	bl	8000a00 <__retarget_lock_acquire_recursive>
 80007d6:	4628      	mov	r0, r5
 80007d8:	4621      	mov	r1, r4
 80007da:	f7ff ff5d 	bl	8000698 <__sflush_r>
 80007de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80007e0:	07da      	lsls	r2, r3, #31
 80007e2:	4605      	mov	r5, r0
 80007e4:	d4e0      	bmi.n	80007a8 <_fflush_r+0xc>
 80007e6:	89a3      	ldrh	r3, [r4, #12]
 80007e8:	059b      	lsls	r3, r3, #22
 80007ea:	d4dd      	bmi.n	80007a8 <_fflush_r+0xc>
 80007ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007ee:	f000 f908 	bl	8000a02 <__retarget_lock_release_recursive>
 80007f2:	e7d9      	b.n	80007a8 <_fflush_r+0xc>
 80007f4:	4b05      	ldr	r3, [pc, #20]	; (800080c <_fflush_r+0x70>)
 80007f6:	429c      	cmp	r4, r3
 80007f8:	d101      	bne.n	80007fe <_fflush_r+0x62>
 80007fa:	68ac      	ldr	r4, [r5, #8]
 80007fc:	e7df      	b.n	80007be <_fflush_r+0x22>
 80007fe:	4b04      	ldr	r3, [pc, #16]	; (8000810 <_fflush_r+0x74>)
 8000800:	429c      	cmp	r4, r3
 8000802:	bf08      	it	eq
 8000804:	68ec      	ldreq	r4, [r5, #12]
 8000806:	e7da      	b.n	80007be <_fflush_r+0x22>
 8000808:	08000e74 	.word	0x08000e74
 800080c:	08000e94 	.word	0x08000e94
 8000810:	08000e54 	.word	0x08000e54

08000814 <std>:
 8000814:	2300      	movs	r3, #0
 8000816:	b510      	push	{r4, lr}
 8000818:	4604      	mov	r4, r0
 800081a:	e9c0 3300 	strd	r3, r3, [r0]
 800081e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000822:	6083      	str	r3, [r0, #8]
 8000824:	8181      	strh	r1, [r0, #12]
 8000826:	6643      	str	r3, [r0, #100]	; 0x64
 8000828:	81c2      	strh	r2, [r0, #14]
 800082a:	6183      	str	r3, [r0, #24]
 800082c:	4619      	mov	r1, r3
 800082e:	2208      	movs	r2, #8
 8000830:	305c      	adds	r0, #92	; 0x5c
 8000832:	f7ff fdf3 	bl	800041c <memset>
 8000836:	4b05      	ldr	r3, [pc, #20]	; (800084c <std+0x38>)
 8000838:	6263      	str	r3, [r4, #36]	; 0x24
 800083a:	4b05      	ldr	r3, [pc, #20]	; (8000850 <std+0x3c>)
 800083c:	62a3      	str	r3, [r4, #40]	; 0x28
 800083e:	4b05      	ldr	r3, [pc, #20]	; (8000854 <std+0x40>)
 8000840:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000842:	4b05      	ldr	r3, [pc, #20]	; (8000858 <std+0x44>)
 8000844:	6224      	str	r4, [r4, #32]
 8000846:	6323      	str	r3, [r4, #48]	; 0x30
 8000848:	bd10      	pop	{r4, pc}
 800084a:	bf00      	nop
 800084c:	08000cad 	.word	0x08000cad
 8000850:	08000ccf 	.word	0x08000ccf
 8000854:	08000d07 	.word	0x08000d07
 8000858:	08000d2b 	.word	0x08000d2b

0800085c <_cleanup_r>:
 800085c:	4901      	ldr	r1, [pc, #4]	; (8000864 <_cleanup_r+0x8>)
 800085e:	f000 b8af 	b.w	80009c0 <_fwalk_reent>
 8000862:	bf00      	nop
 8000864:	0800079d 	.word	0x0800079d

08000868 <__sfmoreglue>:
 8000868:	b570      	push	{r4, r5, r6, lr}
 800086a:	2268      	movs	r2, #104	; 0x68
 800086c:	1e4d      	subs	r5, r1, #1
 800086e:	4355      	muls	r5, r2
 8000870:	460e      	mov	r6, r1
 8000872:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000876:	f000 f995 	bl	8000ba4 <_malloc_r>
 800087a:	4604      	mov	r4, r0
 800087c:	b140      	cbz	r0, 8000890 <__sfmoreglue+0x28>
 800087e:	2100      	movs	r1, #0
 8000880:	e9c0 1600 	strd	r1, r6, [r0]
 8000884:	300c      	adds	r0, #12
 8000886:	60a0      	str	r0, [r4, #8]
 8000888:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800088c:	f7ff fdc6 	bl	800041c <memset>
 8000890:	4620      	mov	r0, r4
 8000892:	bd70      	pop	{r4, r5, r6, pc}

08000894 <__sfp_lock_acquire>:
 8000894:	4801      	ldr	r0, [pc, #4]	; (800089c <__sfp_lock_acquire+0x8>)
 8000896:	f000 b8b3 	b.w	8000a00 <__retarget_lock_acquire_recursive>
 800089a:	bf00      	nop
 800089c:	20000085 	.word	0x20000085

080008a0 <__sfp_lock_release>:
 80008a0:	4801      	ldr	r0, [pc, #4]	; (80008a8 <__sfp_lock_release+0x8>)
 80008a2:	f000 b8ae 	b.w	8000a02 <__retarget_lock_release_recursive>
 80008a6:	bf00      	nop
 80008a8:	20000085 	.word	0x20000085

080008ac <__sinit_lock_acquire>:
 80008ac:	4801      	ldr	r0, [pc, #4]	; (80008b4 <__sinit_lock_acquire+0x8>)
 80008ae:	f000 b8a7 	b.w	8000a00 <__retarget_lock_acquire_recursive>
 80008b2:	bf00      	nop
 80008b4:	20000086 	.word	0x20000086

080008b8 <__sinit_lock_release>:
 80008b8:	4801      	ldr	r0, [pc, #4]	; (80008c0 <__sinit_lock_release+0x8>)
 80008ba:	f000 b8a2 	b.w	8000a02 <__retarget_lock_release_recursive>
 80008be:	bf00      	nop
 80008c0:	20000086 	.word	0x20000086

080008c4 <__sinit>:
 80008c4:	b510      	push	{r4, lr}
 80008c6:	4604      	mov	r4, r0
 80008c8:	f7ff fff0 	bl	80008ac <__sinit_lock_acquire>
 80008cc:	69a3      	ldr	r3, [r4, #24]
 80008ce:	b11b      	cbz	r3, 80008d8 <__sinit+0x14>
 80008d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008d4:	f7ff bff0 	b.w	80008b8 <__sinit_lock_release>
 80008d8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008dc:	6523      	str	r3, [r4, #80]	; 0x50
 80008de:	4b13      	ldr	r3, [pc, #76]	; (800092c <__sinit+0x68>)
 80008e0:	4a13      	ldr	r2, [pc, #76]	; (8000930 <__sinit+0x6c>)
 80008e2:	681b      	ldr	r3, [r3, #0]
 80008e4:	62a2      	str	r2, [r4, #40]	; 0x28
 80008e6:	42a3      	cmp	r3, r4
 80008e8:	bf04      	itt	eq
 80008ea:	2301      	moveq	r3, #1
 80008ec:	61a3      	streq	r3, [r4, #24]
 80008ee:	4620      	mov	r0, r4
 80008f0:	f000 f820 	bl	8000934 <__sfp>
 80008f4:	6060      	str	r0, [r4, #4]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f000 f81c 	bl	8000934 <__sfp>
 80008fc:	60a0      	str	r0, [r4, #8]
 80008fe:	4620      	mov	r0, r4
 8000900:	f000 f818 	bl	8000934 <__sfp>
 8000904:	2200      	movs	r2, #0
 8000906:	60e0      	str	r0, [r4, #12]
 8000908:	2104      	movs	r1, #4
 800090a:	6860      	ldr	r0, [r4, #4]
 800090c:	f7ff ff82 	bl	8000814 <std>
 8000910:	68a0      	ldr	r0, [r4, #8]
 8000912:	2201      	movs	r2, #1
 8000914:	2109      	movs	r1, #9
 8000916:	f7ff ff7d 	bl	8000814 <std>
 800091a:	68e0      	ldr	r0, [r4, #12]
 800091c:	2202      	movs	r2, #2
 800091e:	2112      	movs	r1, #18
 8000920:	f7ff ff78 	bl	8000814 <std>
 8000924:	2301      	movs	r3, #1
 8000926:	61a3      	str	r3, [r4, #24]
 8000928:	e7d2      	b.n	80008d0 <__sinit+0xc>
 800092a:	bf00      	nop
 800092c:	08000e50 	.word	0x08000e50
 8000930:	0800085d 	.word	0x0800085d

08000934 <__sfp>:
 8000934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000936:	4607      	mov	r7, r0
 8000938:	f7ff ffac 	bl	8000894 <__sfp_lock_acquire>
 800093c:	4b1e      	ldr	r3, [pc, #120]	; (80009b8 <__sfp+0x84>)
 800093e:	681e      	ldr	r6, [r3, #0]
 8000940:	69b3      	ldr	r3, [r6, #24]
 8000942:	b913      	cbnz	r3, 800094a <__sfp+0x16>
 8000944:	4630      	mov	r0, r6
 8000946:	f7ff ffbd 	bl	80008c4 <__sinit>
 800094a:	3648      	adds	r6, #72	; 0x48
 800094c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000950:	3b01      	subs	r3, #1
 8000952:	d503      	bpl.n	800095c <__sfp+0x28>
 8000954:	6833      	ldr	r3, [r6, #0]
 8000956:	b30b      	cbz	r3, 800099c <__sfp+0x68>
 8000958:	6836      	ldr	r6, [r6, #0]
 800095a:	e7f7      	b.n	800094c <__sfp+0x18>
 800095c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000960:	b9d5      	cbnz	r5, 8000998 <__sfp+0x64>
 8000962:	4b16      	ldr	r3, [pc, #88]	; (80009bc <__sfp+0x88>)
 8000964:	60e3      	str	r3, [r4, #12]
 8000966:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800096a:	6665      	str	r5, [r4, #100]	; 0x64
 800096c:	f000 f847 	bl	80009fe <__retarget_lock_init_recursive>
 8000970:	f7ff ff96 	bl	80008a0 <__sfp_lock_release>
 8000974:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000978:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800097c:	6025      	str	r5, [r4, #0]
 800097e:	61a5      	str	r5, [r4, #24]
 8000980:	2208      	movs	r2, #8
 8000982:	4629      	mov	r1, r5
 8000984:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000988:	f7ff fd48 	bl	800041c <memset>
 800098c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000990:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000994:	4620      	mov	r0, r4
 8000996:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000998:	3468      	adds	r4, #104	; 0x68
 800099a:	e7d9      	b.n	8000950 <__sfp+0x1c>
 800099c:	2104      	movs	r1, #4
 800099e:	4638      	mov	r0, r7
 80009a0:	f7ff ff62 	bl	8000868 <__sfmoreglue>
 80009a4:	4604      	mov	r4, r0
 80009a6:	6030      	str	r0, [r6, #0]
 80009a8:	2800      	cmp	r0, #0
 80009aa:	d1d5      	bne.n	8000958 <__sfp+0x24>
 80009ac:	f7ff ff78 	bl	80008a0 <__sfp_lock_release>
 80009b0:	230c      	movs	r3, #12
 80009b2:	603b      	str	r3, [r7, #0]
 80009b4:	e7ee      	b.n	8000994 <__sfp+0x60>
 80009b6:	bf00      	nop
 80009b8:	08000e50 	.word	0x08000e50
 80009bc:	ffff0001 	.word	0xffff0001

080009c0 <_fwalk_reent>:
 80009c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009c4:	4606      	mov	r6, r0
 80009c6:	4688      	mov	r8, r1
 80009c8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009cc:	2700      	movs	r7, #0
 80009ce:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80009d2:	f1b9 0901 	subs.w	r9, r9, #1
 80009d6:	d505      	bpl.n	80009e4 <_fwalk_reent+0x24>
 80009d8:	6824      	ldr	r4, [r4, #0]
 80009da:	2c00      	cmp	r4, #0
 80009dc:	d1f7      	bne.n	80009ce <_fwalk_reent+0xe>
 80009de:	4638      	mov	r0, r7
 80009e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009e4:	89ab      	ldrh	r3, [r5, #12]
 80009e6:	2b01      	cmp	r3, #1
 80009e8:	d907      	bls.n	80009fa <_fwalk_reent+0x3a>
 80009ea:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009ee:	3301      	adds	r3, #1
 80009f0:	d003      	beq.n	80009fa <_fwalk_reent+0x3a>
 80009f2:	4629      	mov	r1, r5
 80009f4:	4630      	mov	r0, r6
 80009f6:	47c0      	blx	r8
 80009f8:	4307      	orrs	r7, r0
 80009fa:	3568      	adds	r5, #104	; 0x68
 80009fc:	e7e9      	b.n	80009d2 <_fwalk_reent+0x12>

080009fe <__retarget_lock_init_recursive>:
 80009fe:	4770      	bx	lr

08000a00 <__retarget_lock_acquire_recursive>:
 8000a00:	4770      	bx	lr

08000a02 <__retarget_lock_release_recursive>:
 8000a02:	4770      	bx	lr

08000a04 <__swhatbuf_r>:
 8000a04:	b570      	push	{r4, r5, r6, lr}
 8000a06:	460e      	mov	r6, r1
 8000a08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a0c:	2900      	cmp	r1, #0
 8000a0e:	b096      	sub	sp, #88	; 0x58
 8000a10:	4614      	mov	r4, r2
 8000a12:	461d      	mov	r5, r3
 8000a14:	da08      	bge.n	8000a28 <__swhatbuf_r+0x24>
 8000a16:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	602a      	str	r2, [r5, #0]
 8000a1e:	061a      	lsls	r2, r3, #24
 8000a20:	d410      	bmi.n	8000a44 <__swhatbuf_r+0x40>
 8000a22:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a26:	e00e      	b.n	8000a46 <__swhatbuf_r+0x42>
 8000a28:	466a      	mov	r2, sp
 8000a2a:	f000 f9a5 	bl	8000d78 <_fstat_r>
 8000a2e:	2800      	cmp	r0, #0
 8000a30:	dbf1      	blt.n	8000a16 <__swhatbuf_r+0x12>
 8000a32:	9a01      	ldr	r2, [sp, #4]
 8000a34:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a38:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a3c:	425a      	negs	r2, r3
 8000a3e:	415a      	adcs	r2, r3
 8000a40:	602a      	str	r2, [r5, #0]
 8000a42:	e7ee      	b.n	8000a22 <__swhatbuf_r+0x1e>
 8000a44:	2340      	movs	r3, #64	; 0x40
 8000a46:	2000      	movs	r0, #0
 8000a48:	6023      	str	r3, [r4, #0]
 8000a4a:	b016      	add	sp, #88	; 0x58
 8000a4c:	bd70      	pop	{r4, r5, r6, pc}
	...

08000a50 <__smakebuf_r>:
 8000a50:	898b      	ldrh	r3, [r1, #12]
 8000a52:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a54:	079d      	lsls	r5, r3, #30
 8000a56:	4606      	mov	r6, r0
 8000a58:	460c      	mov	r4, r1
 8000a5a:	d507      	bpl.n	8000a6c <__smakebuf_r+0x1c>
 8000a5c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a60:	6023      	str	r3, [r4, #0]
 8000a62:	6123      	str	r3, [r4, #16]
 8000a64:	2301      	movs	r3, #1
 8000a66:	6163      	str	r3, [r4, #20]
 8000a68:	b002      	add	sp, #8
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}
 8000a6c:	ab01      	add	r3, sp, #4
 8000a6e:	466a      	mov	r2, sp
 8000a70:	f7ff ffc8 	bl	8000a04 <__swhatbuf_r>
 8000a74:	9900      	ldr	r1, [sp, #0]
 8000a76:	4605      	mov	r5, r0
 8000a78:	4630      	mov	r0, r6
 8000a7a:	f000 f893 	bl	8000ba4 <_malloc_r>
 8000a7e:	b948      	cbnz	r0, 8000a94 <__smakebuf_r+0x44>
 8000a80:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a84:	059a      	lsls	r2, r3, #22
 8000a86:	d4ef      	bmi.n	8000a68 <__smakebuf_r+0x18>
 8000a88:	f023 0303 	bic.w	r3, r3, #3
 8000a8c:	f043 0302 	orr.w	r3, r3, #2
 8000a90:	81a3      	strh	r3, [r4, #12]
 8000a92:	e7e3      	b.n	8000a5c <__smakebuf_r+0xc>
 8000a94:	4b0d      	ldr	r3, [pc, #52]	; (8000acc <__smakebuf_r+0x7c>)
 8000a96:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a98:	89a3      	ldrh	r3, [r4, #12]
 8000a9a:	6020      	str	r0, [r4, #0]
 8000a9c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000aa0:	81a3      	strh	r3, [r4, #12]
 8000aa2:	9b00      	ldr	r3, [sp, #0]
 8000aa4:	6163      	str	r3, [r4, #20]
 8000aa6:	9b01      	ldr	r3, [sp, #4]
 8000aa8:	6120      	str	r0, [r4, #16]
 8000aaa:	b15b      	cbz	r3, 8000ac4 <__smakebuf_r+0x74>
 8000aac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ab0:	4630      	mov	r0, r6
 8000ab2:	f000 f973 	bl	8000d9c <_isatty_r>
 8000ab6:	b128      	cbz	r0, 8000ac4 <__smakebuf_r+0x74>
 8000ab8:	89a3      	ldrh	r3, [r4, #12]
 8000aba:	f023 0303 	bic.w	r3, r3, #3
 8000abe:	f043 0301 	orr.w	r3, r3, #1
 8000ac2:	81a3      	strh	r3, [r4, #12]
 8000ac4:	89a0      	ldrh	r0, [r4, #12]
 8000ac6:	4305      	orrs	r5, r0
 8000ac8:	81a5      	strh	r5, [r4, #12]
 8000aca:	e7cd      	b.n	8000a68 <__smakebuf_r+0x18>
 8000acc:	0800085d 	.word	0x0800085d

08000ad0 <_free_r>:
 8000ad0:	b538      	push	{r3, r4, r5, lr}
 8000ad2:	4605      	mov	r5, r0
 8000ad4:	2900      	cmp	r1, #0
 8000ad6:	d041      	beq.n	8000b5c <_free_r+0x8c>
 8000ad8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000adc:	1f0c      	subs	r4, r1, #4
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	bfb8      	it	lt
 8000ae2:	18e4      	addlt	r4, r4, r3
 8000ae4:	f000 f97c 	bl	8000de0 <__malloc_lock>
 8000ae8:	4a1d      	ldr	r2, [pc, #116]	; (8000b60 <_free_r+0x90>)
 8000aea:	6813      	ldr	r3, [r2, #0]
 8000aec:	b933      	cbnz	r3, 8000afc <_free_r+0x2c>
 8000aee:	6063      	str	r3, [r4, #4]
 8000af0:	6014      	str	r4, [r2, #0]
 8000af2:	4628      	mov	r0, r5
 8000af4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000af8:	f000 b978 	b.w	8000dec <__malloc_unlock>
 8000afc:	42a3      	cmp	r3, r4
 8000afe:	d908      	bls.n	8000b12 <_free_r+0x42>
 8000b00:	6820      	ldr	r0, [r4, #0]
 8000b02:	1821      	adds	r1, r4, r0
 8000b04:	428b      	cmp	r3, r1
 8000b06:	bf01      	itttt	eq
 8000b08:	6819      	ldreq	r1, [r3, #0]
 8000b0a:	685b      	ldreq	r3, [r3, #4]
 8000b0c:	1809      	addeq	r1, r1, r0
 8000b0e:	6021      	streq	r1, [r4, #0]
 8000b10:	e7ed      	b.n	8000aee <_free_r+0x1e>
 8000b12:	461a      	mov	r2, r3
 8000b14:	685b      	ldr	r3, [r3, #4]
 8000b16:	b10b      	cbz	r3, 8000b1c <_free_r+0x4c>
 8000b18:	42a3      	cmp	r3, r4
 8000b1a:	d9fa      	bls.n	8000b12 <_free_r+0x42>
 8000b1c:	6811      	ldr	r1, [r2, #0]
 8000b1e:	1850      	adds	r0, r2, r1
 8000b20:	42a0      	cmp	r0, r4
 8000b22:	d10b      	bne.n	8000b3c <_free_r+0x6c>
 8000b24:	6820      	ldr	r0, [r4, #0]
 8000b26:	4401      	add	r1, r0
 8000b28:	1850      	adds	r0, r2, r1
 8000b2a:	4283      	cmp	r3, r0
 8000b2c:	6011      	str	r1, [r2, #0]
 8000b2e:	d1e0      	bne.n	8000af2 <_free_r+0x22>
 8000b30:	6818      	ldr	r0, [r3, #0]
 8000b32:	685b      	ldr	r3, [r3, #4]
 8000b34:	6053      	str	r3, [r2, #4]
 8000b36:	4401      	add	r1, r0
 8000b38:	6011      	str	r1, [r2, #0]
 8000b3a:	e7da      	b.n	8000af2 <_free_r+0x22>
 8000b3c:	d902      	bls.n	8000b44 <_free_r+0x74>
 8000b3e:	230c      	movs	r3, #12
 8000b40:	602b      	str	r3, [r5, #0]
 8000b42:	e7d6      	b.n	8000af2 <_free_r+0x22>
 8000b44:	6820      	ldr	r0, [r4, #0]
 8000b46:	1821      	adds	r1, r4, r0
 8000b48:	428b      	cmp	r3, r1
 8000b4a:	bf04      	itt	eq
 8000b4c:	6819      	ldreq	r1, [r3, #0]
 8000b4e:	685b      	ldreq	r3, [r3, #4]
 8000b50:	6063      	str	r3, [r4, #4]
 8000b52:	bf04      	itt	eq
 8000b54:	1809      	addeq	r1, r1, r0
 8000b56:	6021      	streq	r1, [r4, #0]
 8000b58:	6054      	str	r4, [r2, #4]
 8000b5a:	e7ca      	b.n	8000af2 <_free_r+0x22>
 8000b5c:	bd38      	pop	{r3, r4, r5, pc}
 8000b5e:	bf00      	nop
 8000b60:	20000088 	.word	0x20000088

08000b64 <sbrk_aligned>:
 8000b64:	b570      	push	{r4, r5, r6, lr}
 8000b66:	4e0e      	ldr	r6, [pc, #56]	; (8000ba0 <sbrk_aligned+0x3c>)
 8000b68:	460c      	mov	r4, r1
 8000b6a:	6831      	ldr	r1, [r6, #0]
 8000b6c:	4605      	mov	r5, r0
 8000b6e:	b911      	cbnz	r1, 8000b76 <sbrk_aligned+0x12>
 8000b70:	f000 f88c 	bl	8000c8c <_sbrk_r>
 8000b74:	6030      	str	r0, [r6, #0]
 8000b76:	4621      	mov	r1, r4
 8000b78:	4628      	mov	r0, r5
 8000b7a:	f000 f887 	bl	8000c8c <_sbrk_r>
 8000b7e:	1c43      	adds	r3, r0, #1
 8000b80:	d00a      	beq.n	8000b98 <sbrk_aligned+0x34>
 8000b82:	1cc4      	adds	r4, r0, #3
 8000b84:	f024 0403 	bic.w	r4, r4, #3
 8000b88:	42a0      	cmp	r0, r4
 8000b8a:	d007      	beq.n	8000b9c <sbrk_aligned+0x38>
 8000b8c:	1a21      	subs	r1, r4, r0
 8000b8e:	4628      	mov	r0, r5
 8000b90:	f000 f87c 	bl	8000c8c <_sbrk_r>
 8000b94:	3001      	adds	r0, #1
 8000b96:	d101      	bne.n	8000b9c <sbrk_aligned+0x38>
 8000b98:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000b9c:	4620      	mov	r0, r4
 8000b9e:	bd70      	pop	{r4, r5, r6, pc}
 8000ba0:	2000008c 	.word	0x2000008c

08000ba4 <_malloc_r>:
 8000ba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ba8:	1ccd      	adds	r5, r1, #3
 8000baa:	f025 0503 	bic.w	r5, r5, #3
 8000bae:	3508      	adds	r5, #8
 8000bb0:	2d0c      	cmp	r5, #12
 8000bb2:	bf38      	it	cc
 8000bb4:	250c      	movcc	r5, #12
 8000bb6:	2d00      	cmp	r5, #0
 8000bb8:	4607      	mov	r7, r0
 8000bba:	db01      	blt.n	8000bc0 <_malloc_r+0x1c>
 8000bbc:	42a9      	cmp	r1, r5
 8000bbe:	d905      	bls.n	8000bcc <_malloc_r+0x28>
 8000bc0:	230c      	movs	r3, #12
 8000bc2:	603b      	str	r3, [r7, #0]
 8000bc4:	2600      	movs	r6, #0
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000bcc:	4e2e      	ldr	r6, [pc, #184]	; (8000c88 <_malloc_r+0xe4>)
 8000bce:	f000 f907 	bl	8000de0 <__malloc_lock>
 8000bd2:	6833      	ldr	r3, [r6, #0]
 8000bd4:	461c      	mov	r4, r3
 8000bd6:	bb34      	cbnz	r4, 8000c26 <_malloc_r+0x82>
 8000bd8:	4629      	mov	r1, r5
 8000bda:	4638      	mov	r0, r7
 8000bdc:	f7ff ffc2 	bl	8000b64 <sbrk_aligned>
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	4604      	mov	r4, r0
 8000be4:	d14d      	bne.n	8000c82 <_malloc_r+0xde>
 8000be6:	6834      	ldr	r4, [r6, #0]
 8000be8:	4626      	mov	r6, r4
 8000bea:	2e00      	cmp	r6, #0
 8000bec:	d140      	bne.n	8000c70 <_malloc_r+0xcc>
 8000bee:	6823      	ldr	r3, [r4, #0]
 8000bf0:	4631      	mov	r1, r6
 8000bf2:	4638      	mov	r0, r7
 8000bf4:	eb04 0803 	add.w	r8, r4, r3
 8000bf8:	f000 f848 	bl	8000c8c <_sbrk_r>
 8000bfc:	4580      	cmp	r8, r0
 8000bfe:	d13a      	bne.n	8000c76 <_malloc_r+0xd2>
 8000c00:	6821      	ldr	r1, [r4, #0]
 8000c02:	3503      	adds	r5, #3
 8000c04:	1a6d      	subs	r5, r5, r1
 8000c06:	f025 0503 	bic.w	r5, r5, #3
 8000c0a:	3508      	adds	r5, #8
 8000c0c:	2d0c      	cmp	r5, #12
 8000c0e:	bf38      	it	cc
 8000c10:	250c      	movcc	r5, #12
 8000c12:	4629      	mov	r1, r5
 8000c14:	4638      	mov	r0, r7
 8000c16:	f7ff ffa5 	bl	8000b64 <sbrk_aligned>
 8000c1a:	3001      	adds	r0, #1
 8000c1c:	d02b      	beq.n	8000c76 <_malloc_r+0xd2>
 8000c1e:	6823      	ldr	r3, [r4, #0]
 8000c20:	442b      	add	r3, r5
 8000c22:	6023      	str	r3, [r4, #0]
 8000c24:	e00e      	b.n	8000c44 <_malloc_r+0xa0>
 8000c26:	6822      	ldr	r2, [r4, #0]
 8000c28:	1b52      	subs	r2, r2, r5
 8000c2a:	d41e      	bmi.n	8000c6a <_malloc_r+0xc6>
 8000c2c:	2a0b      	cmp	r2, #11
 8000c2e:	d916      	bls.n	8000c5e <_malloc_r+0xba>
 8000c30:	1961      	adds	r1, r4, r5
 8000c32:	42a3      	cmp	r3, r4
 8000c34:	6025      	str	r5, [r4, #0]
 8000c36:	bf18      	it	ne
 8000c38:	6059      	strne	r1, [r3, #4]
 8000c3a:	6863      	ldr	r3, [r4, #4]
 8000c3c:	bf08      	it	eq
 8000c3e:	6031      	streq	r1, [r6, #0]
 8000c40:	5162      	str	r2, [r4, r5]
 8000c42:	604b      	str	r3, [r1, #4]
 8000c44:	4638      	mov	r0, r7
 8000c46:	f104 060b 	add.w	r6, r4, #11
 8000c4a:	f000 f8cf 	bl	8000dec <__malloc_unlock>
 8000c4e:	f026 0607 	bic.w	r6, r6, #7
 8000c52:	1d23      	adds	r3, r4, #4
 8000c54:	1af2      	subs	r2, r6, r3
 8000c56:	d0b6      	beq.n	8000bc6 <_malloc_r+0x22>
 8000c58:	1b9b      	subs	r3, r3, r6
 8000c5a:	50a3      	str	r3, [r4, r2]
 8000c5c:	e7b3      	b.n	8000bc6 <_malloc_r+0x22>
 8000c5e:	6862      	ldr	r2, [r4, #4]
 8000c60:	42a3      	cmp	r3, r4
 8000c62:	bf0c      	ite	eq
 8000c64:	6032      	streq	r2, [r6, #0]
 8000c66:	605a      	strne	r2, [r3, #4]
 8000c68:	e7ec      	b.n	8000c44 <_malloc_r+0xa0>
 8000c6a:	4623      	mov	r3, r4
 8000c6c:	6864      	ldr	r4, [r4, #4]
 8000c6e:	e7b2      	b.n	8000bd6 <_malloc_r+0x32>
 8000c70:	4634      	mov	r4, r6
 8000c72:	6876      	ldr	r6, [r6, #4]
 8000c74:	e7b9      	b.n	8000bea <_malloc_r+0x46>
 8000c76:	230c      	movs	r3, #12
 8000c78:	603b      	str	r3, [r7, #0]
 8000c7a:	4638      	mov	r0, r7
 8000c7c:	f000 f8b6 	bl	8000dec <__malloc_unlock>
 8000c80:	e7a1      	b.n	8000bc6 <_malloc_r+0x22>
 8000c82:	6025      	str	r5, [r4, #0]
 8000c84:	e7de      	b.n	8000c44 <_malloc_r+0xa0>
 8000c86:	bf00      	nop
 8000c88:	20000088 	.word	0x20000088

08000c8c <_sbrk_r>:
 8000c8c:	b538      	push	{r3, r4, r5, lr}
 8000c8e:	4d06      	ldr	r5, [pc, #24]	; (8000ca8 <_sbrk_r+0x1c>)
 8000c90:	2300      	movs	r3, #0
 8000c92:	4604      	mov	r4, r0
 8000c94:	4608      	mov	r0, r1
 8000c96:	602b      	str	r3, [r5, #0]
 8000c98:	f7ff fb36 	bl	8000308 <_sbrk>
 8000c9c:	1c43      	adds	r3, r0, #1
 8000c9e:	d102      	bne.n	8000ca6 <_sbrk_r+0x1a>
 8000ca0:	682b      	ldr	r3, [r5, #0]
 8000ca2:	b103      	cbz	r3, 8000ca6 <_sbrk_r+0x1a>
 8000ca4:	6023      	str	r3, [r4, #0]
 8000ca6:	bd38      	pop	{r3, r4, r5, pc}
 8000ca8:	20000090 	.word	0x20000090

08000cac <__sread>:
 8000cac:	b510      	push	{r4, lr}
 8000cae:	460c      	mov	r4, r1
 8000cb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cb4:	f000 f8a0 	bl	8000df8 <_read_r>
 8000cb8:	2800      	cmp	r0, #0
 8000cba:	bfab      	itete	ge
 8000cbc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000cbe:	89a3      	ldrhlt	r3, [r4, #12]
 8000cc0:	181b      	addge	r3, r3, r0
 8000cc2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000cc6:	bfac      	ite	ge
 8000cc8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000cca:	81a3      	strhlt	r3, [r4, #12]
 8000ccc:	bd10      	pop	{r4, pc}

08000cce <__swrite>:
 8000cce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cd2:	461f      	mov	r7, r3
 8000cd4:	898b      	ldrh	r3, [r1, #12]
 8000cd6:	05db      	lsls	r3, r3, #23
 8000cd8:	4605      	mov	r5, r0
 8000cda:	460c      	mov	r4, r1
 8000cdc:	4616      	mov	r6, r2
 8000cde:	d505      	bpl.n	8000cec <__swrite+0x1e>
 8000ce0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ce4:	2302      	movs	r3, #2
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	f000 f868 	bl	8000dbc <_lseek_r>
 8000cec:	89a3      	ldrh	r3, [r4, #12]
 8000cee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cf2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cf6:	81a3      	strh	r3, [r4, #12]
 8000cf8:	4632      	mov	r2, r6
 8000cfa:	463b      	mov	r3, r7
 8000cfc:	4628      	mov	r0, r5
 8000cfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d02:	f000 b817 	b.w	8000d34 <_write_r>

08000d06 <__sseek>:
 8000d06:	b510      	push	{r4, lr}
 8000d08:	460c      	mov	r4, r1
 8000d0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d0e:	f000 f855 	bl	8000dbc <_lseek_r>
 8000d12:	1c43      	adds	r3, r0, #1
 8000d14:	89a3      	ldrh	r3, [r4, #12]
 8000d16:	bf15      	itete	ne
 8000d18:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d22:	81a3      	strheq	r3, [r4, #12]
 8000d24:	bf18      	it	ne
 8000d26:	81a3      	strhne	r3, [r4, #12]
 8000d28:	bd10      	pop	{r4, pc}

08000d2a <__sclose>:
 8000d2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d2e:	f000 b813 	b.w	8000d58 <_close_r>
	...

08000d34 <_write_r>:
 8000d34:	b538      	push	{r3, r4, r5, lr}
 8000d36:	4d07      	ldr	r5, [pc, #28]	; (8000d54 <_write_r+0x20>)
 8000d38:	4604      	mov	r4, r0
 8000d3a:	4608      	mov	r0, r1
 8000d3c:	4611      	mov	r1, r2
 8000d3e:	2200      	movs	r2, #0
 8000d40:	602a      	str	r2, [r5, #0]
 8000d42:	461a      	mov	r2, r3
 8000d44:	f7ff fa93 	bl	800026e <_write>
 8000d48:	1c43      	adds	r3, r0, #1
 8000d4a:	d102      	bne.n	8000d52 <_write_r+0x1e>
 8000d4c:	682b      	ldr	r3, [r5, #0]
 8000d4e:	b103      	cbz	r3, 8000d52 <_write_r+0x1e>
 8000d50:	6023      	str	r3, [r4, #0]
 8000d52:	bd38      	pop	{r3, r4, r5, pc}
 8000d54:	20000090 	.word	0x20000090

08000d58 <_close_r>:
 8000d58:	b538      	push	{r3, r4, r5, lr}
 8000d5a:	4d06      	ldr	r5, [pc, #24]	; (8000d74 <_close_r+0x1c>)
 8000d5c:	2300      	movs	r3, #0
 8000d5e:	4604      	mov	r4, r0
 8000d60:	4608      	mov	r0, r1
 8000d62:	602b      	str	r3, [r5, #0]
 8000d64:	f7ff fa9f 	bl	80002a6 <_close>
 8000d68:	1c43      	adds	r3, r0, #1
 8000d6a:	d102      	bne.n	8000d72 <_close_r+0x1a>
 8000d6c:	682b      	ldr	r3, [r5, #0]
 8000d6e:	b103      	cbz	r3, 8000d72 <_close_r+0x1a>
 8000d70:	6023      	str	r3, [r4, #0]
 8000d72:	bd38      	pop	{r3, r4, r5, pc}
 8000d74:	20000090 	.word	0x20000090

08000d78 <_fstat_r>:
 8000d78:	b538      	push	{r3, r4, r5, lr}
 8000d7a:	4d07      	ldr	r5, [pc, #28]	; (8000d98 <_fstat_r+0x20>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	4604      	mov	r4, r0
 8000d80:	4608      	mov	r0, r1
 8000d82:	4611      	mov	r1, r2
 8000d84:	602b      	str	r3, [r5, #0]
 8000d86:	f7ff fa99 	bl	80002bc <_fstat>
 8000d8a:	1c43      	adds	r3, r0, #1
 8000d8c:	d102      	bne.n	8000d94 <_fstat_r+0x1c>
 8000d8e:	682b      	ldr	r3, [r5, #0]
 8000d90:	b103      	cbz	r3, 8000d94 <_fstat_r+0x1c>
 8000d92:	6023      	str	r3, [r4, #0]
 8000d94:	bd38      	pop	{r3, r4, r5, pc}
 8000d96:	bf00      	nop
 8000d98:	20000090 	.word	0x20000090

08000d9c <_isatty_r>:
 8000d9c:	b538      	push	{r3, r4, r5, lr}
 8000d9e:	4d06      	ldr	r5, [pc, #24]	; (8000db8 <_isatty_r+0x1c>)
 8000da0:	2300      	movs	r3, #0
 8000da2:	4604      	mov	r4, r0
 8000da4:	4608      	mov	r0, r1
 8000da6:	602b      	str	r3, [r5, #0]
 8000da8:	f7ff fa97 	bl	80002da <_isatty>
 8000dac:	1c43      	adds	r3, r0, #1
 8000dae:	d102      	bne.n	8000db6 <_isatty_r+0x1a>
 8000db0:	682b      	ldr	r3, [r5, #0]
 8000db2:	b103      	cbz	r3, 8000db6 <_isatty_r+0x1a>
 8000db4:	6023      	str	r3, [r4, #0]
 8000db6:	bd38      	pop	{r3, r4, r5, pc}
 8000db8:	20000090 	.word	0x20000090

08000dbc <_lseek_r>:
 8000dbc:	b538      	push	{r3, r4, r5, lr}
 8000dbe:	4d07      	ldr	r5, [pc, #28]	; (8000ddc <_lseek_r+0x20>)
 8000dc0:	4604      	mov	r4, r0
 8000dc2:	4608      	mov	r0, r1
 8000dc4:	4611      	mov	r1, r2
 8000dc6:	2200      	movs	r2, #0
 8000dc8:	602a      	str	r2, [r5, #0]
 8000dca:	461a      	mov	r2, r3
 8000dcc:	f7ff fa8f 	bl	80002ee <_lseek>
 8000dd0:	1c43      	adds	r3, r0, #1
 8000dd2:	d102      	bne.n	8000dda <_lseek_r+0x1e>
 8000dd4:	682b      	ldr	r3, [r5, #0]
 8000dd6:	b103      	cbz	r3, 8000dda <_lseek_r+0x1e>
 8000dd8:	6023      	str	r3, [r4, #0]
 8000dda:	bd38      	pop	{r3, r4, r5, pc}
 8000ddc:	20000090 	.word	0x20000090

08000de0 <__malloc_lock>:
 8000de0:	4801      	ldr	r0, [pc, #4]	; (8000de8 <__malloc_lock+0x8>)
 8000de2:	f7ff be0d 	b.w	8000a00 <__retarget_lock_acquire_recursive>
 8000de6:	bf00      	nop
 8000de8:	20000084 	.word	0x20000084

08000dec <__malloc_unlock>:
 8000dec:	4801      	ldr	r0, [pc, #4]	; (8000df4 <__malloc_unlock+0x8>)
 8000dee:	f7ff be08 	b.w	8000a02 <__retarget_lock_release_recursive>
 8000df2:	bf00      	nop
 8000df4:	20000084 	.word	0x20000084

08000df8 <_read_r>:
 8000df8:	b538      	push	{r3, r4, r5, lr}
 8000dfa:	4d07      	ldr	r5, [pc, #28]	; (8000e18 <_read_r+0x20>)
 8000dfc:	4604      	mov	r4, r0
 8000dfe:	4608      	mov	r0, r1
 8000e00:	4611      	mov	r1, r2
 8000e02:	2200      	movs	r2, #0
 8000e04:	602a      	str	r2, [r5, #0]
 8000e06:	461a      	mov	r2, r3
 8000e08:	f7ff fa14 	bl	8000234 <_read>
 8000e0c:	1c43      	adds	r3, r0, #1
 8000e0e:	d102      	bne.n	8000e16 <_read_r+0x1e>
 8000e10:	682b      	ldr	r3, [r5, #0]
 8000e12:	b103      	cbz	r3, 8000e16 <_read_r+0x1e>
 8000e14:	6023      	str	r3, [r4, #0]
 8000e16:	bd38      	pop	{r3, r4, r5, pc}
 8000e18:	20000090 	.word	0x20000090

08000e1c <_init>:
 8000e1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e1e:	bf00      	nop
 8000e20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e22:	bc08      	pop	{r3}
 8000e24:	469e      	mov	lr, r3
 8000e26:	4770      	bx	lr

08000e28 <_fini>:
 8000e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e2a:	bf00      	nop
 8000e2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e2e:	bc08      	pop	{r3}
 8000e30:	469e      	mov	lr, r3
 8000e32:	4770      	bx	lr
